{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onMovies","useState","setTitle","selectedMovie","setSelectedMovie","hasFindError","setHasFindError","hasLoadingSubmit","setHasLoadingSubmit","hasFirstLoad","setHasFirstLoad","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","movieDate","newDescrip","Plot","newposter","Poster","Title","imdbID","createNewMovie","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","mov","currentMovies","newMovies","some","m","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ef9547f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onMovies: (m: Movie | null) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onMovies,\n}) => {\n  const [title, setTitle] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState<Movie | null>(null);\n  const [hasFindError, setHasFindError] = useState(false);\n  const [hasLoadingSubmit, setHasLoadingSubmit] = useState(false);\n  const [hasFirstLoad, setHasFirstLoad] = useState(true);\n\n  const createNewMovie = (movieDate: MovieData) => {\n    const newDescrip = movieDate.Plot === 'N/A'\n      ? 'Unfortunately there is no description'\n      : movieDate.Plot;\n    const newposter = movieDate.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : movieDate.Poster;\n\n    return {\n      title: movieDate.Title,\n      description: newDescrip,\n      imgUrl: newposter,\n      imdbId: movieDate.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${movieDate.imdbID}`,\n    };\n  };\n\n  const handlerTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasFindError(false);\n  };\n\n  const handlerSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setHasLoadingSubmit(true);\n\n    getMovie(title)\n      .then(res => {\n        if ('Response' in res && res.Response === 'False') {\n          setHasFindError(true);\n        } else {\n          const newRes = res as MovieData;\n\n          setSelectedMovie(createNewMovie(newRes));\n          setHasFindError(false);\n          setHasFirstLoad(false);\n        }\n      })\n      .finally(() => {\n        setHasLoadingSubmit(false);\n      });\n  };\n\n  const handlerAddClick = () => {\n    onMovies(selectedMovie);\n    setHasFindError(false);\n    setTitle('');\n    setSelectedMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handlerSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': hasFindError })}\n              value={title}\n              onChange={handlerTitleChange}\n            />\n          </div>\n\n          {hasFindError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!title}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button',\n                { 'is-loading': hasLoadingSubmit },\n                { 'is-light': !hasLoadingSubmit })}\n            >\n              {hasFirstLoad ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {selectedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handlerAddClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {selectedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={selectedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\n// const MY_KEY = 'b3cb4801';\nconst API_URL = 'https://www.omdbapi.com/?apikey=b3cb48011';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handlerAddMovie = (mov: Movie | null) => setMovies((currentMovies) => {\n    const newMovies = [...currentMovies];\n\n    if (mov && !newMovies.some(m => m.imdbId === mov.imdbId)) {\n      newMovies.push(mov);\n    }\n\n    return newMovies;\n  });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onMovies={handlerAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}